case(confusable) ::= "case <confusable.source>: return new int[]{ <confusable.target; separator=\", \">};"
confusables(url,date,header, confusables01, confusables02) ::= <<
package com.github.mpkorstanje.unicode.tr39confusables;

/* 
 * Generated file; do not modify. 
 *
 * Source: <url>  
 * Generated: <date>
 * Original header:
 * <header ; separator="\n * ">
 */
public class MixedScriptAnyCase implements Confusables {

	public int[] get(int codePoint) {
		// Split table in two to avoid method size limit
		if(codePoint \<  <first(confusables02).source> ){
			return get01(codePoint);
		} else {
			return get02(codePoint);
		}
	}
	private static int[] get01(int codePoint) {
		switch (codePoint) {
		<confusables01:case() ; anchor, separator="\n">
		default:
			return new int[]{codePoint};
		}
	}
	private static int[] get02(int codePoint) {
		switch (codePoint) {
		<confusables02:case() ; anchor, separator="\n"> 
		default:
			return new int[]{codePoint};
		}
	}
}

>>
